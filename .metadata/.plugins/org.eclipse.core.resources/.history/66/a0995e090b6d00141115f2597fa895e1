package data;

import data.FriendsDbContract.FriendEntry;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;

public class FriendsDBHelper extends SQLiteOpenHelper {

	// If you change the database schema, you must increment the database
	// version.
	private static final int DATABASE_VERSION = 1;

	private static final String DATABASE_NAME = "friends.db";

	public FriendsDBHelper(Context context) {
		super(context, DATABASE_NAME, null, DATABASE_VERSION);
	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		// Create a table to hold locations. A location consists of the string
		// supplied in the
		// location setting, the city name, and the latitude and longitude
		final String SQL_CREATE_LOCATION_TABLE = "CREATE TABLE "
				+ FriendEntry.TABLE_NAME + " (" + FriendEntry._ID
				+ " INTEGER PRIMARY KEY," + FriendEntry.COLUMN_FRIEND_NAME
				+ " TEXT NOT NULL, " + FriendEntry.COLUMN_FRIEND_PHONE_NUMBER
				+ " TEXT NOT NULL, " + " );";

	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // This database is only a cache for online data, so its upgrade policy is
        // to simply to discard the data and start over
        // Note that this only fires if you change the version number for your database.
        // It does NOT depend on the version number for your application.
        // If you want to update the schema without wiping data, commenting out the next 2 lines
        // should be your top priority before modifying this method.
		db.execSQL("DROP TABLE IF EXISTS " + LocationEntry.TABLE_NAME);
		db.execSQL("DROP TABLE IF EXISTS " + WeatherEntry.TABLE_NAME);
        onCreate(db);

	}

}
