package data;

import java.util.List;

import data.FriendsDbContract.FriendEntry;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import Common.Addres;
import Common.Friend;
import Common.User;

public class DAO implements IdataAcces
{
	private static DAO instace;
	private Context context;
	private FriendsDBHelper dbHelper;
	  // Database fields
	  private SQLiteDatabase database;
	private DAO(Context context)
	{
		this.context = context;
		dbHelper =  new FriendsDBHelper(context);
	}
	
	public static DAO getInstatnce(Context context)
	{
		if(instace == null)
			instace=new DAO(context);
		return instace;
	}
	
	@Override
	public void open() throws SQLException {
		database = dbHelper.getWritableDatabase();
	}

	@Override
	public void close() {
		dbHelper.close();
	}
	
	public Friend addFriend(Friend friend)
	{
		if(friend == null) return null;
	    ContentValues values = new ContentValues();
	    values.put(FriendEntry.COLUMN_FRIEND_NAME, friend.getFriendName());
	    long insertId = database.insert(FriendEntry.TABLE_NAME, null,
	        values);
	    Cursor cursor = database.query(MySQLiteHelper.TABLE_COMMENTS,
	        allColumns, MySQLiteHelper.COLUMN_ID + " = " + insertId, null,
	        null, null, null);
	    cursor.moveToFirst();
	    Comment newComment = cursorToComment(cursor);
	    cursor.close();
	    return newComment;
		
	}
	
	public void removeFriend(Friend friend)
	{
		
	}
	public Friend getFriend(int id)
	{
		
	}
	
	public List<Friend> getAllFriends()
	{
		
	}

	@Override
	public User getUser(String userName, String password) {
		// Check in the storage (In the cloud, the database etc..)
		//if exists, return the crate and return the user object,otherwise return null.
		
		User user = new User();
		user.setUserName(userName);
		user.setPassword(password);
		user.setMail("Cadan85@gmail.com");
		Addres add = new Addres();
		add.setCity("Jerusalem");
		add.setStreet("Yafo");
		add.setStreetNumber(35);
		user.setAddres(add);
		return user;
	}
	
	
	
	

}
